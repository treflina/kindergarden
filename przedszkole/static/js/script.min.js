"use strict";window.onload=function(){document.querySelector(".nav__item-link").addEventListener("click",function(){document.querySelector(".nav__dropdown").classList.toggle("show")});for(var e=document.querySelector(".nav-list"),t=document.querySelector(".hamburger"),i=document.querySelector(".nav__logo"),n=document.querySelectorAll(".nav-link"),c=(window.onclick=function(e){for(var t=e.target,i=document.getElementsByClassName("nav__dropdown"),n=0;n<i.length;n++)i[n].previousElementSibling===t?(i[n].classList.toggle("show"),i[n].previousElementSibling.classList.toggle("active")):(i[n].classList.remove("show"),i[n].previousElementSibling.classList.remove("active"))},function(){t.classList.remove("is-active"),e.classList.remove("nav-list--active")}),o=(n.forEach(function(e){e.addEventListener("click",c)}),i.addEventListener("click",c),t.addEventListener("click",function(){t.classList.toggle("is-active"),e.classList.toggle("nav-list--active")}),document.querySelector(".cookie-box")),s=(document.querySelector(".cookie-btn").addEventListener("click",function(){localStorage.setItem("cookie","true"),o.classList.add("hide"),console.log("clicked")}),localStorage.getItem("cookie")&&o.classList.add("hide"),document.querySelector(".news__accordion"),document.querySelectorAll(".news__btn")),a=document.querySelectorAll(".news__info"),r=1;r<=s.length;r++)s[r-1].setAttribute("id","accordion-open-"+r),a[r-1].setAttribute("id","accordion-section-"+r);a.forEach(function(e){e.setAttribute("aria-hidden",!0),e.classList.remove("active")}),s.forEach(function(e){e.setAttribute("aria-expanded",!1);e.getAttribute("aria-expanded");var t=e.getAttribute("id").split("-").pop(),i=document.getElementById("accordion-section-".concat(t));e.addEventListener("click",function(){e.classList.toggle("expanded"),i.classList.toggle("active"),e.classList.contains("expanded")?(e.setAttribute("aria-expanded",!0),i.setAttribute("aria-hidden",!1)):(e.setAttribute("aria-expanded",!1),i.setAttribute("aria-hidden",!0))})});window.addEventListener("click",function(e){e.target.classList.contains("news__btn")||e.target.classList.contains("news__info")||e.target.classList.contains("news__info-text")||document.querySelectorAll(".news__info").forEach(function(e){return e.classList.remove("active")})});for(var l=document.querySelectorAll(".gallery__item"),d=1;d<=l.length;d++)l[d-1].classList.add("gallery__item--"+d)};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
