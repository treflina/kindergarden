"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var r;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}document.addEventListener("DOMContentLoaded",function(e){function n(e){var t=document.createElement("div");t.classList.add("loader"),r.appendChild(t),fetch("/?"+new URLSearchParams({page:e}),{method:"GET",headers:{"X-Requested-With":"XMLHttpRequest"}}).then(function(e){return e.text()}).then(function(e){for(;r.firstChild;)r.removeChild(r.firstChild);r.insertAdjacentHTML("afterbegin",e)}).catch(function(e){console.warn("Something went wrong.",e)})}var r=document.getElementById("chronicle"),a=document.getElementsByClassName("pagination-link"),o=1;n(o),_toConsumableArray(a).forEach(function(r){r.addEventListener("click",function(e){e.preventDefault();var t,e="".concat(r.href).split("=")[1];o=e?parseInt(e):1,n(o),t=o,_toConsumableArray(a).forEach(function(e){e.classList.remove("active"),e.classList.contains("pagination-link-".concat(t))&&e.classList.add("active")}),document.getElementById("chronicle").scrollIntoView({behavior:"smooth"})})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNocm9uaWNsZS5qcyJdLCJuYW1lcyI6WyJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInJlbW92ZSIsImNsYXNzTGlzdCIsImNyZWF0ZUVsZW1lbnQiLCJidG4iLCJhZGQiLCJjaHJvbmljbGVTZWN0aW9uIiwiYXBwZW5kQ2hpbGQiLCJuZXdEaXYiLCJmZXRjaCIsImdldFBvc3RzIiwiVVJMU2VhcmNoUGFyYW1zIiwicGFnZSIsIm1ldGhvZCIsImhlYWRlcnMiLCJYLVJlcXVlc3RlZC1XaXRoIiwidGhlbiIsInJlc3BvbnNlIiwiZGF0YSIsInRleHQiLCJyZW1vdmVDaGlsZCIsImZpcnN0Q2hpbGQiLCJpbnNlcnRBZGphY2VudEhUTUwiLCJ3YXJuIiwiZXJyIiwiY29uc29sZSIsIl90b0NvbnN1bWFibGVBcnJheSIsImdldEVsZW1lbnRCeUlkIiwiYnRuTGlua3MiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwidGFyZ2V0VXJsIiwicGFyc2VJbnQiLCJlIiwicHJldmVudERlZmF1bHQiLCJwIiwiY29uY2F0IiwiaHJlZiIsInNwbGl0IiwicmVtb3ZlQW5kU2V0QWN0aXZlQ2xhc3MiLCJmb3JFYWNoIiwiY29udGFpbnMiLCJzY3JvbGxJbnRvVmlldyIsImJlaGF2aW9yIl0sIm1hcHBpbmdzIjoicStCQUFBQSxTQUFTQyxpQkFBaUIsbUJBQW9CLFNBQVVDLEdBTzlCQyxTQUFWQyxFQUFVRCxHQUNkLElBQVFDLEVBQVNKLFNBQVNLLGNBQUEsS0FBQSxFQUN0QkMsRUFBSUYsVUFBYUcsSUFBQyxRQUFTLEVBQy9CQyxFQUFBQyxZQUFBQyxDQUFBLEVBRVBDLE1BRUtDLEtBRUtSLElBQVNTLGdCQUFjLENBQ2RDLEtBQUNMLENBSVQsQ0FBQSxFQUVVSyxDQUVkQyxPQUFBLE1BQ1lDLFFBQUssQ0FDSkMsbUJBQUEsZ0JBQ0wsQ0FDSixDQUdIQyxFQUNVQyxLQUFBQSxTQUFlQSxHQUVwQixPQUFVQyxFQUFNQyxLQUFBLENBQ2xCLENBQU9iLEVBQ0hBLEtBQUFBLFNBQWlCYyxHQUNyQixLQUFBZCxFQUFBZSxZQUNBZixFQUFpQmdCLFlBQW1CaEIsRUFBbUJlLFVBQUEsRUFHL0NFLEVBQUtELG1CQUE2QixhQUFBSixDQUFBLENBQzVDLENBQUEsRUFBQSxNQUNULFNBQUFNLEdBRWFDLFFBQUFGLEtBQUEsd0JBQUFDLENBQUEsQ0FFZEUsQ0FBQUEsQ0FDSXRCLENBaERKLElBQU1FLEVBQW1CUixTQUFTNkIsZUFBZSxXQUFXLEVBQ3REQyxFQUFXOUIsU0FBUytCLHVCQUF1QixpQkFBaUIsRUFDOURqQixFQUFPLEVBMkNYRixFQU1Zb0IsQ0FBQUEsRUFKWkosbUJBTVlkLENBQU9tQixFQUFBQSxRQUFTRCxTQUFBQSxHQUNuQjFCLEVBQUFMLGlCQUFNLFFBQUEsU0FBQWlDLEdBQ0NBLEVBQUFDLGVBQUksRUFHWnZCLElBdER5QndCLEVBc0RoQnRCLEVBQUssR0FBQXVCLE9BQUEvQixFQUFBZ0MsSUFBQSxFQUFBQyxNQUFBLEdBQUEsRUFBQSxHQUlUVixFQUZMVyxFQUVLWCxTQUFlRyxDQUFXLEVBQ1ksRUFHckRwQixFQUFBRSxDQUFBLEVBOURtQ3NCLEVBd0REdEIsRUF2RDVCYyxtQkFBSUUsQ0FBUSxFQUFFVyxRQUFRLFNBQUNuQyxHQUNuQkEsRUFBSUYsVUFBVUQsT0FBTyxRQUFRLEVBUGhDRixFQUFBQSxVQUFpQnlDLFNBQUEsbUJBQUFMLE9BQThCbkMsQ0FBQUEsQ0FBSyxHQUNuRE0sRUFBQUEsVUFBbUJSLElBQVM2QixRQUFBQSxDQUU5QmYsQ0FBQUEsRUEyRElkLFNBQ0s2QixlQUFlLFdBQVcsRUFDMUJjLGVBQWUsQ0FBRUMsU0FBVSxRQUFTLENBQUMsQ0FDOUMsQ0FBQyxDQUNMLENBQUMsQ0FDTCxDQUFDIiwiZmlsZSI6ImNocm9uaWNsZS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgIGNvbnN0IGNocm9uaWNsZVNlY3Rpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNocm9uaWNsZVwiKTtcclxuICAgIGNvbnN0IGJ0bkxpbmtzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInBhZ2luYXRpb24tbGlua1wiKTtcclxuICAgIGxldCBwYWdlID0gMTtcclxuXHJcbiAgICBjb25zdCByZW1vdmVBbmRTZXRBY3RpdmVDbGFzcyA9IChwKSA9PiB7XHJcbiAgICAgICAgWy4uLmJ0bkxpbmtzXS5mb3JFYWNoKChidG4pID0+IHtcclxuICAgICAgICAgICAgYnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgIGlmIChidG4uY2xhc3NMaXN0LmNvbnRhaW5zKGBwYWdpbmF0aW9uLWxpbmstJHtwfWApKSB7XHJcbiAgICAgICAgICAgICAgICBidG4uY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICBjb25zdCBnZXRQb3N0cyA9IChwYWdlKSA9PiB7XHJcbiAgICAgICAgY29uc3QgbmV3RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgICAgICBuZXdEaXYuY2xhc3NMaXN0LmFkZChcImxvYWRlclwiKTtcclxuICAgICAgICBjaHJvbmljbGVTZWN0aW9uLmFwcGVuZENoaWxkKG5ld0Rpdik7XHJcblxyXG4gICAgICAgIGZldGNoKFxyXG4gICAgICAgICAgICBcIi9cIiArXHJcbiAgICAgICAgICAgICAgICBcIj9cIiArXHJcbiAgICAgICAgICAgICAgICBuZXcgVVJMU2VhcmNoUGFyYW1zKHtcclxuICAgICAgICAgICAgICAgICAgICBwYWdlOiBwYWdlLFxyXG4gICAgICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICBcIlgtUmVxdWVzdGVkLVdpdGhcIjogXCJYTUxIdHRwUmVxdWVzdFwiLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIClcclxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UudGV4dCgpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgd2hpbGUgKGNocm9uaWNsZVNlY3Rpb24uZmlyc3RDaGlsZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNocm9uaWNsZVNlY3Rpb24ucmVtb3ZlQ2hpbGQoY2hyb25pY2xlU2VjdGlvbi5maXJzdENoaWxkKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNocm9uaWNsZVNlY3Rpb24uaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYWZ0ZXJiZWdpblwiLCBkYXRhKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcIlNvbWV0aGluZyB3ZW50IHdyb25nLlwiLCBlcnIpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgZ2V0UG9zdHMocGFnZSk7XHJcblxyXG4gICAgWy4uLmJ0bkxpbmtzXS5mb3JFYWNoKChidG4pID0+IHtcclxuICAgICAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIGdldFBvc3RzQWZ0ZXJDbGljayhlKSB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAgICAgICAgIGxldCB0YXJnZXRVcmwgPSBgJHtidG4uaHJlZn1gLnNwbGl0KFwiPVwiKVsxXTtcclxuICAgICAgICAgICAgaWYgKHRhcmdldFVybCkge1xyXG4gICAgICAgICAgICAgICAgcGFnZSA9IHBhcnNlSW50KHRhcmdldFVybCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBwYWdlID0gMTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgZ2V0UG9zdHMocGFnZSk7XHJcblxyXG4gICAgICAgICAgICByZW1vdmVBbmRTZXRBY3RpdmVDbGFzcyhwYWdlKTtcclxuICAgICAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcImNocm9uaWNsZVwiKVxyXG4gICAgICAgICAgICAgICAgLnNjcm9sbEludG9WaWV3KHsgYmVoYXZpb3I6IFwic21vb3RoXCIgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufSk7XHJcbiJdfQ==
