"use strict";function _typeof2(e){return(_typeof2="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(e,t){if("object"===("undefined"==typeof exports?"undefined":_typeof2(exports))&&"object"===("undefined"==typeof module?"undefined":_typeof2(module)))module.exports=t(require("handsontable"));else if("function"==typeof define&&define.amd)define(["handsontable"],t);else{var E,T="object"===("undefined"==typeof exports?"undefined":_typeof2(exports))?t(require("handsontable")):t(e.Handsontable);for(E in T)("object"===("undefined"==typeof exports?"undefined":_typeof2(exports))?exports:e)[E]=T[E]}}("undefined"!=typeof self?self:void 0,function(E){return T=[,function(e,t){e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t,E){var T=E(3);e.exports=function(e,t,E){return(t=T(t))in e?Object.defineProperty(e,t,{value:E,enumerable:!0,configurable:!0,writable:!0}):e[t]=E,e},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t,E){var T=E(4).default,_=E(5);e.exports=function(e){return e=_(e,"string"),"symbol"===T(e)?e:String(e)},e.exports.__esModule=!0,e.exports.default=e.exports},function(t,e){function E(e){return t.exports=E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t.exports.__esModule=!0,t.exports.default=t.exports,E(e)}t.exports=E,t.exports.__esModule=!0,t.exports.default=t.exports},function(e,t,E){var T=E(4).default;e.exports=function(e,t){if("object"!==T(e)||null===e)return e;var E=e[Symbol.toPrimitive];if(void 0===E)return("string"===t?String:Number)(e);if(E=E.call(e,t||"default"),"object"!==T(E))return E;throw new TypeError("@@toPrimitive must return a primitive value.")},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t){e.exports=E},,,,,,,,,,,,,,function(e,t,E){var T,_=E(1),o=(t.__esModule=!0,t.default=void 0,_(E(2))),_=_(E(6)),E=_.default.languages.dictionaryKeys,o=((0,o.default)(T={languageCode:"pl-PL"},E.CONTEXTMENU_ITEMS_NO_ITEMS,"Brak dostępnych opcji"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_ROW_ABOVE,"Wstaw wiersz powyżej"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_ROW_BELOW,"Wstaw wiersz poniżej"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_INSERT_LEFT,"Wstaw kolumnę z lewej"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_INSERT_RIGHT,"Wstaw kolumnę z prawej"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_REMOVE_ROW,["Usuń wiersz","Usuń wiersze"]),(0,o.default)(T,E.CONTEXTMENU_ITEMS_REMOVE_COLUMN,["Usuń kolumnę","Usuń kolumny"]),(0,o.default)(T,E.CONTEXTMENU_ITEMS_UNDO,"Cofnij"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_REDO,"Ponów"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_READ_ONLY,"Tylko do odczytu"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_CLEAR_COLUMN,"Wyczyść kolumnę"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_ALIGNMENT,"Wyrównanie"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_ALIGNMENT_LEFT,"Do lewej"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_ALIGNMENT_CENTER,"Do środka"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_ALIGNMENT_RIGHT,"Do prawej"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_ALIGNMENT_JUSTIFY,"Wyjustuj"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_ALIGNMENT_TOP,"Do góry"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_ALIGNMENT_MIDDLE,"Wyśrodkuj"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_ALIGNMENT_BOTTOM,"Do dołu"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_FREEZE_COLUMN,"Zablokuj kolumnę"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_UNFREEZE_COLUMN,"Odblokuj kolumnę"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_BORDERS,"Obramowanie"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_BORDERS_TOP,"Krawędź górna"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_BORDERS_RIGHT,"Krawędź prawa"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_BORDERS_BOTTOM,"Krawędź dolna"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_BORDERS_LEFT,"Krawędź lewa"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_REMOVE_BORDERS,"Usuń obramowanie(a)"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_ADD_COMMENT,"Dodaj komentarz"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_EDIT_COMMENT,"Edytuj komentarz"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_REMOVE_COMMENT,"Usuń komentarz"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_READ_ONLY_COMMENT,"Komentarz tylko do odczytu"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_MERGE_CELLS,"Scal komórki"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_UNMERGE_CELLS,"Rozdziel komórki"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_COPY,"Kopiuj"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_COPY_WITH_COLUMN_HEADERS,["Kopiuj z nagłówkiem","Kopiuj z nagłówkami"]),(0,o.default)(T,E.CONTEXTMENU_ITEMS_COPY_WITH_COLUMN_GROUP_HEADERS,["Kopiuj z nagłówkiem grupowym","Kopiuj z nagłówkami grupowymi"]),(0,o.default)(T,E.CONTEXTMENU_ITEMS_COPY_COLUMN_HEADERS_ONLY,["Kopiuj sam nagłówek","Kopiuj same nagłówki"]),(0,o.default)(T,E.CONTEXTMENU_ITEMS_CUT,"Wytnij"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_NESTED_ROWS_INSERT_CHILD,"Wstaw wiersz podrzędny"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_NESTED_ROWS_DETACH_CHILD,"Odłącz od nadrzędnego"),(0,o.default)(T,E.CONTEXTMENU_ITEMS_HIDE_COLUMN,["Ukryj kolumnę","Ukryj kolumny"]),(0,o.default)(T,E.CONTEXTMENU_ITEMS_SHOW_COLUMN,["Pokaż kolumnę","Pokaż kolumny"]),(0,o.default)(T,E.CONTEXTMENU_ITEMS_HIDE_ROW,["Ukryj wiersz","Ukryj wiersze"]),(0,o.default)(T,E.CONTEXTMENU_ITEMS_SHOW_ROW,["Pokaż wiersz","Pokaż wiersze"]),(0,o.default)(T,E.FILTERS_CONDITIONS_NONE,"Brak"),(0,o.default)(T,E.FILTERS_CONDITIONS_EMPTY,"Komórka jest pusta"),(0,o.default)(T,E.FILTERS_CONDITIONS_NOT_EMPTY,"Komórka nie jest pusta"),(0,o.default)(T,E.FILTERS_CONDITIONS_EQUAL,"Jest równe"),(0,o.default)(T,E.FILTERS_CONDITIONS_NOT_EQUAL,"Jest różne od"),(0,o.default)(T,E.FILTERS_CONDITIONS_BEGINS_WITH,"Tekst zaczyna się od"),(0,o.default)(T,E.FILTERS_CONDITIONS_ENDS_WITH,"Tekst kończy się na"),(0,o.default)(T,E.FILTERS_CONDITIONS_CONTAINS,"Tekst zawiera fragment"),(0,o.default)(T,E.FILTERS_CONDITIONS_NOT_CONTAIN,"Tekst nie zawiera fragmentu"),(0,o.default)(T,E.FILTERS_CONDITIONS_GREATER_THAN,"Większe niż"),(0,o.default)(T,E.FILTERS_CONDITIONS_GREATER_THAN_OR_EQUAL,"Większe lub równe"),(0,o.default)(T,E.FILTERS_CONDITIONS_LESS_THAN,"Mniejsze niż"),(0,o.default)(T,E.FILTERS_CONDITIONS_LESS_THAN_OR_EQUAL,"Mniejsze lub równe"),(0,o.default)(T,E.FILTERS_CONDITIONS_BETWEEN,"Jest pomiędzy"),(0,o.default)(T,E.FILTERS_CONDITIONS_NOT_BETWEEN,"Nie jest pomiędzy"),(0,o.default)(T,E.FILTERS_CONDITIONS_AFTER,"Data późniejsza niż"),(0,o.default)(T,E.FILTERS_CONDITIONS_BEFORE,"Data wcześniejsza niż"),(0,o.default)(T,E.FILTERS_CONDITIONS_TODAY,"Dzisiaj"),(0,o.default)(T,E.FILTERS_CONDITIONS_TOMORROW,"Jutro"),(0,o.default)(T,E.FILTERS_CONDITIONS_YESTERDAY,"Wczoraj"),(0,o.default)(T,E.FILTERS_VALUES_BLANK_CELLS,"Puste miejsca"),(0,o.default)(T,E.FILTERS_DIVS_FILTER_BY_CONDITION,"Filtruj wg warunku"),(0,o.default)(T,E.FILTERS_DIVS_FILTER_BY_VALUE,"Filtruj wg wartości"),(0,o.default)(T,E.FILTERS_LABELS_CONJUNCTION,"Oraz"),(0,o.default)(T,E.FILTERS_LABELS_DISJUNCTION,"Lub"),(0,o.default)(T,E.FILTERS_BUTTONS_SELECT_ALL,"Zaznacz wszystko"),(0,o.default)(T,E.FILTERS_BUTTONS_CLEAR,"Wyczyść"),(0,o.default)(T,E.FILTERS_BUTTONS_OK,"OK"),(0,o.default)(T,E.FILTERS_BUTTONS_CANCEL,"Anuluj"),(0,o.default)(T,E.FILTERS_BUTTONS_PLACEHOLDER_SEARCH,"Szukaj"),(0,o.default)(T,E.FILTERS_BUTTONS_PLACEHOLDER_VALUE,"Wartość"),(0,o.default)(T,E.FILTERS_BUTTONS_PLACEHOLDER_SECOND_VALUE,"Druga wartość"),T);_.default.languages.registerLanguageDictionary(o),t.default=o}],o={},_.m=T,_.c=o,_.d=function(e,t,E){_.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:E})},_.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},_.t=function(t,e){if(1&e&&(t=_(t)),8&e)return t;if(4&e&&"object"===_typeof2(t)&&t&&t.__esModule)return t;var E=Object.create(null);if(_.r(E),Object.defineProperty(E,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var T in t)_.d(E,T,function(e){return t[e]}.bind(null,T));return E},_.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return _.d(t,"a",t),t},_.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},_.p="",_(_.s=20).___;function _(e){var t;return(o[e]||(t=o[e]={i:e,l:!1,exports:{}},T[e].call(t.exports,t,t.exports,_),t.l=!0,t)).exports}var T,o});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
